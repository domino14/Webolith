// @generated by protoc-gen-es v1.10.0
// @generated from file rpc/wordvault/api.proto (package wordvault, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3, Timestamp } from "@bufbuild/protobuf";
import { Alphagram } from "../wordsearcher/searcher_pb.js";

/**
 * @generated from enum wordvault.Score
 */
export const Score = /*@__PURE__*/ proto3.makeEnum(
  "wordvault.Score",
  [
    {no: 0, name: "SCORE_NONE", localName: "NONE"},
    {no: 1, name: "SCORE_AGAIN", localName: "AGAIN"},
    {no: 2, name: "SCORE_HARD", localName: "HARD"},
    {no: 3, name: "SCORE_GOOD", localName: "GOOD"},
    {no: 4, name: "SCORE_EASY", localName: "EASY"},
  ],
);

/**
 * @generated from enum wordvault.FsrsScheduler
 */
export const FsrsScheduler = /*@__PURE__*/ proto3.makeEnum(
  "wordvault.FsrsScheduler",
  [
    {no: 0, name: "FSRS_SCHEDULER_NONE", localName: "NONE"},
    {no: 1, name: "FSRS_SCHEDULER_LONG_TERM", localName: "LONG_TERM"},
    {no: 2, name: "FSRS_SCHEDULER_SHORT_TERM", localName: "SHORT_TERM"},
  ],
);

/**
 * @generated from message wordvault.Card
 */
export const Card = /*@__PURE__*/ proto3.makeMessageType(
  "wordvault.Card",
  () => [
    { no: 1, name: "lexicon", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "alphagram", kind: "message", T: Alphagram },
    { no: 3, name: "card_json_repr", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 4, name: "retrievability", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 5, name: "review_log", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 6, name: "deck_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
  ],
);

/**
 * @generated from message wordvault.CardPreview
 */
export const CardPreview = /*@__PURE__*/ proto3.makeMessageType(
  "wordvault.CardPreview",
  () => [
    { no: 1, name: "lexicon", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "alphagram", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "deck_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
  ],
);

/**
 * @generated from message wordvault.GetCardInfoRequest
 */
export const GetCardInfoRequest = /*@__PURE__*/ proto3.makeMessageType(
  "wordvault.GetCardInfoRequest",
  () => [
    { no: 1, name: "lexicon", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "alphagrams", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ],
);

/**
 * @generated from message wordvault.GetNextScheduledRequest
 */
export const GetNextScheduledRequest = /*@__PURE__*/ proto3.makeMessageType(
  "wordvault.GetNextScheduledRequest",
  () => [
    { no: 1, name: "lexicon", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "limit", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 3, name: "deck_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
  ],
);

/**
 * @generated from message wordvault.GetSingleNextScheduledRequest
 */
export const GetSingleNextScheduledRequest = /*@__PURE__*/ proto3.makeMessageType(
  "wordvault.GetSingleNextScheduledRequest",
  () => [
    { no: 1, name: "lexicon", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "deck_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
  ],
);

/**
 * @generated from message wordvault.GetSingleNextScheduledResponse
 */
export const GetSingleNextScheduledResponse = /*@__PURE__*/ proto3.makeMessageType(
  "wordvault.GetSingleNextScheduledResponse",
  () => [
    { no: 1, name: "card", kind: "message", T: Card },
    { no: 2, name: "overdue_count", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
  ],
);

/**
 * @generated from message wordvault.Cards
 */
export const Cards = /*@__PURE__*/ proto3.makeMessageType(
  "wordvault.Cards",
  () => [
    { no: 1, name: "cards", kind: "message", T: Card, repeated: true },
  ],
);

/**
 * @generated from message wordvault.ScoreCardRequest
 */
export const ScoreCardRequest = /*@__PURE__*/ proto3.makeMessageType(
  "wordvault.ScoreCardRequest",
  () => [
    { no: 1, name: "score", kind: "enum", T: proto3.getEnumType(Score) },
    { no: 2, name: "lexicon", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "alphagram", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message wordvault.ScoreCardResponse
 */
export const ScoreCardResponse = /*@__PURE__*/ proto3.makeMessageType(
  "wordvault.ScoreCardResponse",
  () => [
    { no: 1, name: "next_scheduled", kind: "message", T: Timestamp },
    { no: 2, name: "card_json_repr", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ],
);

/**
 * @generated from message wordvault.AddCardsRequest
 */
export const AddCardsRequest = /*@__PURE__*/ proto3.makeMessageType(
  "wordvault.AddCardsRequest",
  () => [
    { no: 1, name: "lexicon", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "alphagrams", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 3, name: "deck_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
  ],
);

/**
 * @generated from message wordvault.AddCardsResponse
 */
export const AddCardsResponse = /*@__PURE__*/ proto3.makeMessageType(
  "wordvault.AddCardsResponse",
  () => [
    { no: 1, name: "num_cards_added", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 2, name: "num_cards_in_other_decks", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 3, name: "cards_in_other_decks_preview", kind: "message", T: CardPreview, repeated: true },
  ],
);

/**
 * @generated from message wordvault.MoveCardsRequest
 */
export const MoveCardsRequest = /*@__PURE__*/ proto3.makeMessageType(
  "wordvault.MoveCardsRequest",
  () => [
    { no: 1, name: "lexicon", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "alphagrams", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 3, name: "deck_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
  ],
);

/**
 * @generated from message wordvault.MoveCardsResponse
 */
export const MoveCardsResponse = /*@__PURE__*/ proto3.makeMessageType(
  "wordvault.MoveCardsResponse",
  () => [
    { no: 1, name: "num_cards_moved", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
  ],
);

/**
 * @generated from message wordvault.EditLastScoreRequest
 */
export const EditLastScoreRequest = /*@__PURE__*/ proto3.makeMessageType(
  "wordvault.EditLastScoreRequest",
  () => [
    { no: 1, name: "lexicon", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "alphagram", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "new_score", kind: "enum", T: proto3.getEnumType(Score) },
    { no: 4, name: "last_card_repr", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ],
);

/**
 * @generated from message wordvault.GetCardCountRequest
 */
export const GetCardCountRequest = /*@__PURE__*/ proto3.makeMessageType(
  "wordvault.GetCardCountRequest",
  [],
);

/**
 * @generated from message wordvault.CardCountResponse
 */
export const CardCountResponse = /*@__PURE__*/ proto3.makeMessageType(
  "wordvault.CardCountResponse",
  () => [
    { no: 1, name: "num_cards", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "scalar", T: 13 /* ScalarType.UINT32 */} },
    { no: 2, name: "total_cards", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
  ],
);

/**
 * @generated from message wordvault.NextScheduledCountRequest
 */
export const NextScheduledCountRequest = /*@__PURE__*/ proto3.makeMessageType(
  "wordvault.NextScheduledCountRequest",
  () => [
    { no: 1, name: "only_overdue", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "timezone", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "lexicon", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message wordvault.NextScheduledBreakdown
 */
export const NextScheduledBreakdown = /*@__PURE__*/ proto3.makeMessageType(
  "wordvault.NextScheduledBreakdown",
  () => [
    { no: 1, name: "breakdown", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "scalar", T: 13 /* ScalarType.UINT32 */} },
  ],
);

/**
 * @generated from message wordvault.NextScheduledCountByDeckRequest
 */
export const NextScheduledCountByDeckRequest = /*@__PURE__*/ proto3.makeMessageType(
  "wordvault.NextScheduledCountByDeckRequest",
  () => [
    { no: 1, name: "only_overdue", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "timezone", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "lexicon", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message wordvault.DeckBreakdown
 */
export const DeckBreakdown = /*@__PURE__*/ proto3.makeMessageType(
  "wordvault.DeckBreakdown",
  () => [
    { no: 1, name: "deck_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 2, name: "breakdown", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "scalar", T: 13 /* ScalarType.UINT32 */} },
  ],
);

/**
 * @generated from message wordvault.NextScheduledCountByDeckResponse
 */
export const NextScheduledCountByDeckResponse = /*@__PURE__*/ proto3.makeMessageType(
  "wordvault.NextScheduledCountByDeckResponse",
  () => [
    { no: 1, name: "breakdowns", kind: "message", T: DeckBreakdown, repeated: true },
  ],
);

/**
 * TODO: make this deck-aware with a mutually exclusive all_decks/deck_id
 * parameter
 *
 * @generated from message wordvault.PostponeRequest
 */
export const PostponeRequest = /*@__PURE__*/ proto3.makeMessageType(
  "wordvault.PostponeRequest",
  () => [
    { no: 1, name: "lexicon", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "num_to_postpone", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
  ],
);

/**
 * @generated from message wordvault.PostponeResponse
 */
export const PostponeResponse = /*@__PURE__*/ proto3.makeMessageType(
  "wordvault.PostponeResponse",
  () => [
    { no: 1, name: "num_postponed", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
  ],
);

/**
 * TODO: make this deck-aware
 *
 * @generated from message wordvault.DeleteRequest
 */
export const DeleteRequest = /*@__PURE__*/ proto3.makeMessageType(
  "wordvault.DeleteRequest",
  () => [
    { no: 1, name: "lexicon", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "only_new_questions", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 3, name: "only_alphagrams", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 4, name: "all_questions", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ],
);

/**
 * @generated from message wordvault.DeleteResponse
 */
export const DeleteResponse = /*@__PURE__*/ proto3.makeMessageType(
  "wordvault.DeleteResponse",
  () => [
    { no: 1, name: "num_deleted", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
  ],
);

/**
 * @generated from message wordvault.GetDailyProgressRequest
 */
export const GetDailyProgressRequest = /*@__PURE__*/ proto3.makeMessageType(
  "wordvault.GetDailyProgressRequest",
  () => [
    { no: 1, name: "timezone", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message wordvault.GetDailyProgressResponse
 */
export const GetDailyProgressResponse = /*@__PURE__*/ proto3.makeMessageType(
  "wordvault.GetDailyProgressResponse",
  () => [
    { no: 1, name: "progress_stats", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "scalar", T: 5 /* ScalarType.INT32 */} },
  ],
);

/**
 * @generated from message wordvault.GetDailyLeaderboardRequest
 */
export const GetDailyLeaderboardRequest = /*@__PURE__*/ proto3.makeMessageType(
  "wordvault.GetDailyLeaderboardRequest",
  () => [
    { no: 1, name: "timezone", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message wordvault.GetDailyLeaderboardResponse
 */
export const GetDailyLeaderboardResponse = /*@__PURE__*/ proto3.makeMessageType(
  "wordvault.GetDailyLeaderboardResponse",
  () => [
    { no: 1, name: "items", kind: "message", T: GetDailyLeaderboardResponse_LeaderboardItem, repeated: true },
  ],
);

/**
 * @generated from message wordvault.GetDailyLeaderboardResponse.LeaderboardItem
 */
export const GetDailyLeaderboardResponse_LeaderboardItem = /*@__PURE__*/ proto3.makeMessageType(
  "wordvault.GetDailyLeaderboardResponse.LeaderboardItem",
  () => [
    { no: 1, name: "user", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "cards_studied", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ],
  {localName: "GetDailyLeaderboardResponse_LeaderboardItem"},
);

/**
 * @generated from message wordvault.FsrsParameters
 */
export const FsrsParameters = /*@__PURE__*/ proto3.makeMessageType(
  "wordvault.FsrsParameters",
  () => [
    { no: 1, name: "scheduler", kind: "enum", T: proto3.getEnumType(FsrsScheduler) },
    { no: 2, name: "request_retention", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
  ],
);

/**
 * @generated from message wordvault.GetFsrsParametersRequest
 */
export const GetFsrsParametersRequest = /*@__PURE__*/ proto3.makeMessageType(
  "wordvault.GetFsrsParametersRequest",
  [],
);

/**
 * @generated from message wordvault.GetFsrsParametersResponse
 */
export const GetFsrsParametersResponse = /*@__PURE__*/ proto3.makeMessageType(
  "wordvault.GetFsrsParametersResponse",
  () => [
    { no: 1, name: "parameters", kind: "message", T: FsrsParameters },
  ],
);

/**
 * @generated from message wordvault.EditFsrsParametersRequest
 */
export const EditFsrsParametersRequest = /*@__PURE__*/ proto3.makeMessageType(
  "wordvault.EditFsrsParametersRequest",
  () => [
    { no: 1, name: "parameters", kind: "message", T: FsrsParameters },
  ],
);

/**
 * @generated from message wordvault.Deck
 */
export const Deck = /*@__PURE__*/ proto3.makeMessageType(
  "wordvault.Deck",
  () => [
    { no: 1, name: "id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "lexicon", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message wordvault.AddDeckRequest
 */
export const AddDeckRequest = /*@__PURE__*/ proto3.makeMessageType(
  "wordvault.AddDeckRequest",
  () => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "lexicon", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message wordvault.AddDeckResponse
 */
export const AddDeckResponse = /*@__PURE__*/ proto3.makeMessageType(
  "wordvault.AddDeckResponse",
  () => [
    { no: 1, name: "deck", kind: "message", T: Deck },
  ],
);

/**
 * @generated from message wordvault.GetDecksRequest
 */
export const GetDecksRequest = /*@__PURE__*/ proto3.makeMessageType(
  "wordvault.GetDecksRequest",
  [],
);

/**
 * @generated from message wordvault.GetDecksResponse
 */
export const GetDecksResponse = /*@__PURE__*/ proto3.makeMessageType(
  "wordvault.GetDecksResponse",
  () => [
    { no: 1, name: "decks", kind: "message", T: Deck, repeated: true },
  ],
);

/**
 * @generated from message wordvault.EditDeckRequest
 */
export const EditDeckRequest = /*@__PURE__*/ proto3.makeMessageType(
  "wordvault.EditDeckRequest",
  () => [
    { no: 1, name: "id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message wordvault.EditDeckResponse
 */
export const EditDeckResponse = /*@__PURE__*/ proto3.makeMessageType(
  "wordvault.EditDeckResponse",
  () => [
    { no: 1, name: "deck", kind: "message", T: Deck },
  ],
);

/**
 * @generated from message wordvault.EditFsrsParametersResponse
 */
export const EditFsrsParametersResponse = /*@__PURE__*/ proto3.makeMessageType(
  "wordvault.EditFsrsParametersResponse",
  [],
);

