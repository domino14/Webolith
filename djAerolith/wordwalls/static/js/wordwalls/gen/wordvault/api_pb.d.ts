// @generated by protoc-gen-es v1.10.0
// @generated from file rpc/wordvault/api.proto (package wordvault, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage, Timestamp } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { Alphagram } from "../wordsearcher/searcher_pb.js";

/**
 * @generated from enum wordvault.Score
 */
export declare enum Score {
  /**
   * @generated from enum value: SCORE_NONE = 0;
   */
  NONE = 0,

  /**
   * @generated from enum value: SCORE_AGAIN = 1;
   */
  AGAIN = 1,

  /**
   * @generated from enum value: SCORE_HARD = 2;
   */
  HARD = 2,

  /**
   * @generated from enum value: SCORE_GOOD = 3;
   */
  GOOD = 3,

  /**
   * @generated from enum value: SCORE_EASY = 4;
   */
  EASY = 4,
}

/**
 * @generated from enum wordvault.FsrsScheduler
 */
export declare enum FsrsScheduler {
  /**
   * @generated from enum value: FSRS_SCHEDULER_NONE = 0;
   */
  NONE = 0,

  /**
   * @generated from enum value: FSRS_SCHEDULER_LONG_TERM = 1;
   */
  LONG_TERM = 1,

  /**
   * @generated from enum value: FSRS_SCHEDULER_SHORT_TERM = 2;
   */
  SHORT_TERM = 2,
}

/**
 * @generated from message wordvault.Card
 */
export declare class Card extends Message<Card> {
  /**
   * @generated from field: string lexicon = 1;
   */
  lexicon: string;

  /**
   * @generated from field: wordsearcher.Alphagram alphagram = 2;
   */
  alphagram?: Alphagram;

  /**
   * @generated from field: bytes card_json_repr = 3;
   */
  cardJsonRepr: Uint8Array;

  /**
   * The retrievability of a card is not part of the json repr and is computed
   * as of the time of request.
   *
   * @generated from field: double retrievability = 4;
   */
  retrievability: number;

  /**
   * @generated from field: bytes review_log = 5;
   */
  reviewLog: Uint8Array;

  /**
   * @generated from field: optional uint64 deck_id = 6;
   */
  deckId?: bigint;

  constructor(data?: PartialMessage<Card>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "wordvault.Card";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Card;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Card;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Card;

  static equals(a: Card | PlainMessage<Card> | undefined, b: Card | PlainMessage<Card> | undefined): boolean;
}

/**
 * @generated from message wordvault.CardPreview
 */
export declare class CardPreview extends Message<CardPreview> {
  /**
   * @generated from field: string lexicon = 1;
   */
  lexicon: string;

  /**
   * @generated from field: string alphagram = 2;
   */
  alphagram: string;

  /**
   * @generated from field: optional uint64 deck_id = 5;
   */
  deckId?: bigint;

  constructor(data?: PartialMessage<CardPreview>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "wordvault.CardPreview";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CardPreview;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CardPreview;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CardPreview;

  static equals(a: CardPreview | PlainMessage<CardPreview> | undefined, b: CardPreview | PlainMessage<CardPreview> | undefined): boolean;
}

/**
 * @generated from message wordvault.GetCardInfoRequest
 */
export declare class GetCardInfoRequest extends Message<GetCardInfoRequest> {
  /**
   * @generated from field: string lexicon = 1;
   */
  lexicon: string;

  /**
   * @generated from field: repeated string alphagrams = 2;
   */
  alphagrams: string[];

  constructor(data?: PartialMessage<GetCardInfoRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "wordvault.GetCardInfoRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetCardInfoRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetCardInfoRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetCardInfoRequest;

  static equals(a: GetCardInfoRequest | PlainMessage<GetCardInfoRequest> | undefined, b: GetCardInfoRequest | PlainMessage<GetCardInfoRequest> | undefined): boolean;
}

/**
 * @generated from message wordvault.GetNextScheduledRequest
 */
export declare class GetNextScheduledRequest extends Message<GetNextScheduledRequest> {
  /**
   * @generated from field: string lexicon = 1;
   */
  lexicon: string;

  /**
   * @generated from field: uint32 limit = 2;
   */
  limit: number;

  /**
   * @generated from field: optional uint64 deck_id = 3;
   */
  deckId?: bigint;

  constructor(data?: PartialMessage<GetNextScheduledRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "wordvault.GetNextScheduledRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetNextScheduledRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetNextScheduledRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetNextScheduledRequest;

  static equals(a: GetNextScheduledRequest | PlainMessage<GetNextScheduledRequest> | undefined, b: GetNextScheduledRequest | PlainMessage<GetNextScheduledRequest> | undefined): boolean;
}

/**
 * @generated from message wordvault.GetSingleNextScheduledRequest
 */
export declare class GetSingleNextScheduledRequest extends Message<GetSingleNextScheduledRequest> {
  /**
   * @generated from field: string lexicon = 1;
   */
  lexicon: string;

  /**
   * @generated from field: optional uint64 deck_id = 2;
   */
  deckId?: bigint;

  constructor(data?: PartialMessage<GetSingleNextScheduledRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "wordvault.GetSingleNextScheduledRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetSingleNextScheduledRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetSingleNextScheduledRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetSingleNextScheduledRequest;

  static equals(a: GetSingleNextScheduledRequest | PlainMessage<GetSingleNextScheduledRequest> | undefined, b: GetSingleNextScheduledRequest | PlainMessage<GetSingleNextScheduledRequest> | undefined): boolean;
}

/**
 * @generated from message wordvault.GetSingleNextScheduledResponse
 */
export declare class GetSingleNextScheduledResponse extends Message<GetSingleNextScheduledResponse> {
  /**
   * @generated from field: wordvault.Card card = 1;
   */
  card?: Card;

  /**
   * @generated from field: uint32 overdue_count = 2;
   */
  overdueCount: number;

  constructor(data?: PartialMessage<GetSingleNextScheduledResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "wordvault.GetSingleNextScheduledResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetSingleNextScheduledResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetSingleNextScheduledResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetSingleNextScheduledResponse;

  static equals(a: GetSingleNextScheduledResponse | PlainMessage<GetSingleNextScheduledResponse> | undefined, b: GetSingleNextScheduledResponse | PlainMessage<GetSingleNextScheduledResponse> | undefined): boolean;
}

/**
 * @generated from message wordvault.Cards
 */
export declare class Cards extends Message<Cards> {
  /**
   * @generated from field: repeated wordvault.Card cards = 1;
   */
  cards: Card[];

  constructor(data?: PartialMessage<Cards>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "wordvault.Cards";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Cards;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Cards;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Cards;

  static equals(a: Cards | PlainMessage<Cards> | undefined, b: Cards | PlainMessage<Cards> | undefined): boolean;
}

/**
 * @generated from message wordvault.ScoreCardRequest
 */
export declare class ScoreCardRequest extends Message<ScoreCardRequest> {
  /**
   * @generated from field: wordvault.Score score = 1;
   */
  score: Score;

  /**
   * @generated from field: string lexicon = 2;
   */
  lexicon: string;

  /**
   * @generated from field: string alphagram = 3;
   */
  alphagram: string;

  constructor(data?: PartialMessage<ScoreCardRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "wordvault.ScoreCardRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ScoreCardRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ScoreCardRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ScoreCardRequest;

  static equals(a: ScoreCardRequest | PlainMessage<ScoreCardRequest> | undefined, b: ScoreCardRequest | PlainMessage<ScoreCardRequest> | undefined): boolean;
}

/**
 * @generated from message wordvault.ScoreCardResponse
 */
export declare class ScoreCardResponse extends Message<ScoreCardResponse> {
  /**
   * @generated from field: google.protobuf.Timestamp next_scheduled = 1;
   */
  nextScheduled?: Timestamp;

  /**
   * @generated from field: bytes card_json_repr = 2;
   */
  cardJsonRepr: Uint8Array;

  constructor(data?: PartialMessage<ScoreCardResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "wordvault.ScoreCardResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ScoreCardResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ScoreCardResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ScoreCardResponse;

  static equals(a: ScoreCardResponse | PlainMessage<ScoreCardResponse> | undefined, b: ScoreCardResponse | PlainMessage<ScoreCardResponse> | undefined): boolean;
}

/**
 * @generated from message wordvault.AddCardsRequest
 */
export declare class AddCardsRequest extends Message<AddCardsRequest> {
  /**
   * @generated from field: string lexicon = 1;
   */
  lexicon: string;

  /**
   * @generated from field: repeated string alphagrams = 2;
   */
  alphagrams: string[];

  /**
   * @generated from field: optional uint64 deck_id = 3;
   */
  deckId?: bigint;

  constructor(data?: PartialMessage<AddCardsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "wordvault.AddCardsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddCardsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddCardsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddCardsRequest;

  static equals(a: AddCardsRequest | PlainMessage<AddCardsRequest> | undefined, b: AddCardsRequest | PlainMessage<AddCardsRequest> | undefined): boolean;
}

/**
 * @generated from message wordvault.AddCardsResponse
 */
export declare class AddCardsResponse extends Message<AddCardsResponse> {
  /**
   * @generated from field: uint32 num_cards_added = 1;
   */
  numCardsAdded: number;

  /**
   * @generated from field: uint32 num_cards_in_other_decks = 2;
   */
  numCardsInOtherDecks: number;

  /**
   * @generated from field: repeated wordvault.CardPreview cards_in_other_decks_preview = 3;
   */
  cardsInOtherDecksPreview: CardPreview[];

  constructor(data?: PartialMessage<AddCardsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "wordvault.AddCardsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddCardsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddCardsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddCardsResponse;

  static equals(a: AddCardsResponse | PlainMessage<AddCardsResponse> | undefined, b: AddCardsResponse | PlainMessage<AddCardsResponse> | undefined): boolean;
}

/**
 * @generated from message wordvault.MoveCardsRequest
 */
export declare class MoveCardsRequest extends Message<MoveCardsRequest> {
  /**
   * @generated from field: string lexicon = 1;
   */
  lexicon: string;

  /**
   * @generated from field: repeated string alphagrams = 2;
   */
  alphagrams: string[];

  /**
   * @generated from field: optional uint64 deck_id = 3;
   */
  deckId?: bigint;

  constructor(data?: PartialMessage<MoveCardsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "wordvault.MoveCardsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MoveCardsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MoveCardsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MoveCardsRequest;

  static equals(a: MoveCardsRequest | PlainMessage<MoveCardsRequest> | undefined, b: MoveCardsRequest | PlainMessage<MoveCardsRequest> | undefined): boolean;
}

/**
 * @generated from message wordvault.MoveCardsResponse
 */
export declare class MoveCardsResponse extends Message<MoveCardsResponse> {
  /**
   * @generated from field: uint32 num_cards_moved = 1;
   */
  numCardsMoved: number;

  constructor(data?: PartialMessage<MoveCardsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "wordvault.MoveCardsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MoveCardsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MoveCardsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MoveCardsResponse;

  static equals(a: MoveCardsResponse | PlainMessage<MoveCardsResponse> | undefined, b: MoveCardsResponse | PlainMessage<MoveCardsResponse> | undefined): boolean;
}

/**
 * @generated from message wordvault.EditLastScoreRequest
 */
export declare class EditLastScoreRequest extends Message<EditLastScoreRequest> {
  /**
   * @generated from field: string lexicon = 1;
   */
  lexicon: string;

  /**
   * @generated from field: string alphagram = 2;
   */
  alphagram: string;

  /**
   * @generated from field: wordvault.Score new_score = 3;
   */
  newScore: Score;

  /**
   * @generated from field: bytes last_card_repr = 4;
   */
  lastCardRepr: Uint8Array;

  constructor(data?: PartialMessage<EditLastScoreRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "wordvault.EditLastScoreRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EditLastScoreRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EditLastScoreRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EditLastScoreRequest;

  static equals(a: EditLastScoreRequest | PlainMessage<EditLastScoreRequest> | undefined, b: EditLastScoreRequest | PlainMessage<EditLastScoreRequest> | undefined): boolean;
}

/**
 * @generated from message wordvault.GetCardCountRequest
 */
export declare class GetCardCountRequest extends Message<GetCardCountRequest> {
  constructor(data?: PartialMessage<GetCardCountRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "wordvault.GetCardCountRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetCardCountRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetCardCountRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetCardCountRequest;

  static equals(a: GetCardCountRequest | PlainMessage<GetCardCountRequest> | undefined, b: GetCardCountRequest | PlainMessage<GetCardCountRequest> | undefined): boolean;
}

/**
 * @generated from message wordvault.CardCountResponse
 */
export declare class CardCountResponse extends Message<CardCountResponse> {
  /**
   * @generated from field: map<string, uint32> num_cards = 1;
   */
  numCards: { [key: string]: number };

  /**
   * @generated from field: uint32 total_cards = 2;
   */
  totalCards: number;

  constructor(data?: PartialMessage<CardCountResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "wordvault.CardCountResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CardCountResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CardCountResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CardCountResponse;

  static equals(a: CardCountResponse | PlainMessage<CardCountResponse> | undefined, b: CardCountResponse | PlainMessage<CardCountResponse> | undefined): boolean;
}

/**
 * @generated from message wordvault.NextScheduledCountRequest
 */
export declare class NextScheduledCountRequest extends Message<NextScheduledCountRequest> {
  /**
   * @generated from field: bool only_overdue = 1;
   */
  onlyOverdue: boolean;

  /**
   * @generated from field: string timezone = 2;
   */
  timezone: string;

  /**
   * @generated from field: string lexicon = 3;
   */
  lexicon: string;

  constructor(data?: PartialMessage<NextScheduledCountRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "wordvault.NextScheduledCountRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NextScheduledCountRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NextScheduledCountRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NextScheduledCountRequest;

  static equals(a: NextScheduledCountRequest | PlainMessage<NextScheduledCountRequest> | undefined, b: NextScheduledCountRequest | PlainMessage<NextScheduledCountRequest> | undefined): boolean;
}

/**
 * @generated from message wordvault.NextScheduledBreakdown
 */
export declare class NextScheduledBreakdown extends Message<NextScheduledBreakdown> {
  /**
   * @generated from field: map<string, uint32> breakdown = 1;
   */
  breakdown: { [key: string]: number };

  constructor(data?: PartialMessage<NextScheduledBreakdown>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "wordvault.NextScheduledBreakdown";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NextScheduledBreakdown;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NextScheduledBreakdown;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NextScheduledBreakdown;

  static equals(a: NextScheduledBreakdown | PlainMessage<NextScheduledBreakdown> | undefined, b: NextScheduledBreakdown | PlainMessage<NextScheduledBreakdown> | undefined): boolean;
}

/**
 * @generated from message wordvault.NextScheduledCountByDeckRequest
 */
export declare class NextScheduledCountByDeckRequest extends Message<NextScheduledCountByDeckRequest> {
  /**
   * @generated from field: bool only_overdue = 1;
   */
  onlyOverdue: boolean;

  /**
   * @generated from field: string timezone = 2;
   */
  timezone: string;

  /**
   * @generated from field: string lexicon = 3;
   */
  lexicon: string;

  constructor(data?: PartialMessage<NextScheduledCountByDeckRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "wordvault.NextScheduledCountByDeckRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NextScheduledCountByDeckRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NextScheduledCountByDeckRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NextScheduledCountByDeckRequest;

  static equals(a: NextScheduledCountByDeckRequest | PlainMessage<NextScheduledCountByDeckRequest> | undefined, b: NextScheduledCountByDeckRequest | PlainMessage<NextScheduledCountByDeckRequest> | undefined): boolean;
}

/**
 * @generated from message wordvault.DeckBreakdown
 */
export declare class DeckBreakdown extends Message<DeckBreakdown> {
  /**
   * @generated from field: optional uint64 deck_id = 1;
   */
  deckId?: bigint;

  /**
   * @generated from field: map<string, uint32> breakdown = 2;
   */
  breakdown: { [key: string]: number };

  constructor(data?: PartialMessage<DeckBreakdown>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "wordvault.DeckBreakdown";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeckBreakdown;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeckBreakdown;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeckBreakdown;

  static equals(a: DeckBreakdown | PlainMessage<DeckBreakdown> | undefined, b: DeckBreakdown | PlainMessage<DeckBreakdown> | undefined): boolean;
}

/**
 * @generated from message wordvault.NextScheduledCountByDeckResponse
 */
export declare class NextScheduledCountByDeckResponse extends Message<NextScheduledCountByDeckResponse> {
  /**
   * @generated from field: repeated wordvault.DeckBreakdown breakdowns = 1;
   */
  breakdowns: DeckBreakdown[];

  constructor(data?: PartialMessage<NextScheduledCountByDeckResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "wordvault.NextScheduledCountByDeckResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NextScheduledCountByDeckResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NextScheduledCountByDeckResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NextScheduledCountByDeckResponse;

  static equals(a: NextScheduledCountByDeckResponse | PlainMessage<NextScheduledCountByDeckResponse> | undefined, b: NextScheduledCountByDeckResponse | PlainMessage<NextScheduledCountByDeckResponse> | undefined): boolean;
}

/**
 * TODO: make this deck-aware with a mutually exclusive all_decks/deck_id
 * parameter
 *
 * @generated from message wordvault.PostponeRequest
 */
export declare class PostponeRequest extends Message<PostponeRequest> {
  /**
   * @generated from field: string lexicon = 1;
   */
  lexicon: string;

  /**
   * @generated from field: uint32 num_to_postpone = 2;
   */
  numToPostpone: number;

  constructor(data?: PartialMessage<PostponeRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "wordvault.PostponeRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PostponeRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PostponeRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PostponeRequest;

  static equals(a: PostponeRequest | PlainMessage<PostponeRequest> | undefined, b: PostponeRequest | PlainMessage<PostponeRequest> | undefined): boolean;
}

/**
 * @generated from message wordvault.PostponeResponse
 */
export declare class PostponeResponse extends Message<PostponeResponse> {
  /**
   * @generated from field: uint32 num_postponed = 1;
   */
  numPostponed: number;

  constructor(data?: PartialMessage<PostponeResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "wordvault.PostponeResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PostponeResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PostponeResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PostponeResponse;

  static equals(a: PostponeResponse | PlainMessage<PostponeResponse> | undefined, b: PostponeResponse | PlainMessage<PostponeResponse> | undefined): boolean;
}

/**
 * TODO: make this deck-aware
 *
 * @generated from message wordvault.DeleteRequest
 */
export declare class DeleteRequest extends Message<DeleteRequest> {
  /**
   * @generated from field: string lexicon = 1;
   */
  lexicon: string;

  /**
   * The following two conditions are mutually exclusive.
   *
   * @generated from field: bool only_new_questions = 2;
   */
  onlyNewQuestions: boolean;

  /**
   * @generated from field: repeated string only_alphagrams = 3;
   */
  onlyAlphagrams: string[];

  /**
   * @generated from field: bool all_questions = 4;
   */
  allQuestions: boolean;

  constructor(data?: PartialMessage<DeleteRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "wordvault.DeleteRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteRequest;

  static equals(a: DeleteRequest | PlainMessage<DeleteRequest> | undefined, b: DeleteRequest | PlainMessage<DeleteRequest> | undefined): boolean;
}

/**
 * @generated from message wordvault.DeleteResponse
 */
export declare class DeleteResponse extends Message<DeleteResponse> {
  /**
   * @generated from field: uint32 num_deleted = 1;
   */
  numDeleted: number;

  constructor(data?: PartialMessage<DeleteResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "wordvault.DeleteResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteResponse;

  static equals(a: DeleteResponse | PlainMessage<DeleteResponse> | undefined, b: DeleteResponse | PlainMessage<DeleteResponse> | undefined): boolean;
}

/**
 * @generated from message wordvault.GetDailyProgressRequest
 */
export declare class GetDailyProgressRequest extends Message<GetDailyProgressRequest> {
  /**
   * @generated from field: string timezone = 1;
   */
  timezone: string;

  constructor(data?: PartialMessage<GetDailyProgressRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "wordvault.GetDailyProgressRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDailyProgressRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDailyProgressRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDailyProgressRequest;

  static equals(a: GetDailyProgressRequest | PlainMessage<GetDailyProgressRequest> | undefined, b: GetDailyProgressRequest | PlainMessage<GetDailyProgressRequest> | undefined): boolean;
}

/**
 * @generated from message wordvault.GetDailyProgressResponse
 */
export declare class GetDailyProgressResponse extends Message<GetDailyProgressResponse> {
  /**
   * @generated from field: map<string, int32> progress_stats = 1;
   */
  progressStats: { [key: string]: number };

  constructor(data?: PartialMessage<GetDailyProgressResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "wordvault.GetDailyProgressResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDailyProgressResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDailyProgressResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDailyProgressResponse;

  static equals(a: GetDailyProgressResponse | PlainMessage<GetDailyProgressResponse> | undefined, b: GetDailyProgressResponse | PlainMessage<GetDailyProgressResponse> | undefined): boolean;
}

/**
 * @generated from message wordvault.GetDailyLeaderboardRequest
 */
export declare class GetDailyLeaderboardRequest extends Message<GetDailyLeaderboardRequest> {
  /**
   * @generated from field: string timezone = 1;
   */
  timezone: string;

  constructor(data?: PartialMessage<GetDailyLeaderboardRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "wordvault.GetDailyLeaderboardRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDailyLeaderboardRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDailyLeaderboardRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDailyLeaderboardRequest;

  static equals(a: GetDailyLeaderboardRequest | PlainMessage<GetDailyLeaderboardRequest> | undefined, b: GetDailyLeaderboardRequest | PlainMessage<GetDailyLeaderboardRequest> | undefined): boolean;
}

/**
 * @generated from message wordvault.GetDailyLeaderboardResponse
 */
export declare class GetDailyLeaderboardResponse extends Message<GetDailyLeaderboardResponse> {
  /**
   * @generated from field: repeated wordvault.GetDailyLeaderboardResponse.LeaderboardItem items = 1;
   */
  items: GetDailyLeaderboardResponse_LeaderboardItem[];

  constructor(data?: PartialMessage<GetDailyLeaderboardResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "wordvault.GetDailyLeaderboardResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDailyLeaderboardResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDailyLeaderboardResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDailyLeaderboardResponse;

  static equals(a: GetDailyLeaderboardResponse | PlainMessage<GetDailyLeaderboardResponse> | undefined, b: GetDailyLeaderboardResponse | PlainMessage<GetDailyLeaderboardResponse> | undefined): boolean;
}

/**
 * @generated from message wordvault.GetDailyLeaderboardResponse.LeaderboardItem
 */
export declare class GetDailyLeaderboardResponse_LeaderboardItem extends Message<GetDailyLeaderboardResponse_LeaderboardItem> {
  /**
   * @generated from field: string user = 1;
   */
  user: string;

  /**
   * @generated from field: int32 cards_studied = 2;
   */
  cardsStudied: number;

  constructor(data?: PartialMessage<GetDailyLeaderboardResponse_LeaderboardItem>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "wordvault.GetDailyLeaderboardResponse.LeaderboardItem";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDailyLeaderboardResponse_LeaderboardItem;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDailyLeaderboardResponse_LeaderboardItem;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDailyLeaderboardResponse_LeaderboardItem;

  static equals(a: GetDailyLeaderboardResponse_LeaderboardItem | PlainMessage<GetDailyLeaderboardResponse_LeaderboardItem> | undefined, b: GetDailyLeaderboardResponse_LeaderboardItem | PlainMessage<GetDailyLeaderboardResponse_LeaderboardItem> | undefined): boolean;
}

/**
 * @generated from message wordvault.FsrsParameters
 */
export declare class FsrsParameters extends Message<FsrsParameters> {
  /**
   * @generated from field: wordvault.FsrsScheduler scheduler = 1;
   */
  scheduler: FsrsScheduler;

  /**
   * @generated from field: double request_retention = 2;
   */
  requestRetention: number;

  constructor(data?: PartialMessage<FsrsParameters>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "wordvault.FsrsParameters";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FsrsParameters;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FsrsParameters;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FsrsParameters;

  static equals(a: FsrsParameters | PlainMessage<FsrsParameters> | undefined, b: FsrsParameters | PlainMessage<FsrsParameters> | undefined): boolean;
}

/**
 * @generated from message wordvault.GetFsrsParametersRequest
 */
export declare class GetFsrsParametersRequest extends Message<GetFsrsParametersRequest> {
  constructor(data?: PartialMessage<GetFsrsParametersRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "wordvault.GetFsrsParametersRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetFsrsParametersRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetFsrsParametersRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetFsrsParametersRequest;

  static equals(a: GetFsrsParametersRequest | PlainMessage<GetFsrsParametersRequest> | undefined, b: GetFsrsParametersRequest | PlainMessage<GetFsrsParametersRequest> | undefined): boolean;
}

/**
 * @generated from message wordvault.GetFsrsParametersResponse
 */
export declare class GetFsrsParametersResponse extends Message<GetFsrsParametersResponse> {
  /**
   * @generated from field: wordvault.FsrsParameters parameters = 1;
   */
  parameters?: FsrsParameters;

  constructor(data?: PartialMessage<GetFsrsParametersResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "wordvault.GetFsrsParametersResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetFsrsParametersResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetFsrsParametersResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetFsrsParametersResponse;

  static equals(a: GetFsrsParametersResponse | PlainMessage<GetFsrsParametersResponse> | undefined, b: GetFsrsParametersResponse | PlainMessage<GetFsrsParametersResponse> | undefined): boolean;
}

/**
 * @generated from message wordvault.EditFsrsParametersRequest
 */
export declare class EditFsrsParametersRequest extends Message<EditFsrsParametersRequest> {
  /**
   * @generated from field: wordvault.FsrsParameters parameters = 1;
   */
  parameters?: FsrsParameters;

  constructor(data?: PartialMessage<EditFsrsParametersRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "wordvault.EditFsrsParametersRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EditFsrsParametersRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EditFsrsParametersRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EditFsrsParametersRequest;

  static equals(a: EditFsrsParametersRequest | PlainMessage<EditFsrsParametersRequest> | undefined, b: EditFsrsParametersRequest | PlainMessage<EditFsrsParametersRequest> | undefined): boolean;
}

/**
 * @generated from message wordvault.Deck
 */
export declare class Deck extends Message<Deck> {
  /**
   * @generated from field: int64 id = 1;
   */
  id: bigint;

  /**
   * @generated from field: string lexicon = 2;
   */
  lexicon: string;

  /**
   * @generated from field: string name = 3;
   */
  name: string;

  constructor(data?: PartialMessage<Deck>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "wordvault.Deck";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Deck;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Deck;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Deck;

  static equals(a: Deck | PlainMessage<Deck> | undefined, b: Deck | PlainMessage<Deck> | undefined): boolean;
}

/**
 * @generated from message wordvault.AddDeckRequest
 */
export declare class AddDeckRequest extends Message<AddDeckRequest> {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string lexicon = 2;
   */
  lexicon: string;

  constructor(data?: PartialMessage<AddDeckRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "wordvault.AddDeckRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddDeckRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddDeckRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddDeckRequest;

  static equals(a: AddDeckRequest | PlainMessage<AddDeckRequest> | undefined, b: AddDeckRequest | PlainMessage<AddDeckRequest> | undefined): boolean;
}

/**
 * @generated from message wordvault.AddDeckResponse
 */
export declare class AddDeckResponse extends Message<AddDeckResponse> {
  /**
   * @generated from field: wordvault.Deck deck = 1;
   */
  deck?: Deck;

  constructor(data?: PartialMessage<AddDeckResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "wordvault.AddDeckResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddDeckResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddDeckResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddDeckResponse;

  static equals(a: AddDeckResponse | PlainMessage<AddDeckResponse> | undefined, b: AddDeckResponse | PlainMessage<AddDeckResponse> | undefined): boolean;
}

/**
 * @generated from message wordvault.GetDecksRequest
 */
export declare class GetDecksRequest extends Message<GetDecksRequest> {
  constructor(data?: PartialMessage<GetDecksRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "wordvault.GetDecksRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDecksRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDecksRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDecksRequest;

  static equals(a: GetDecksRequest | PlainMessage<GetDecksRequest> | undefined, b: GetDecksRequest | PlainMessage<GetDecksRequest> | undefined): boolean;
}

/**
 * @generated from message wordvault.GetDecksResponse
 */
export declare class GetDecksResponse extends Message<GetDecksResponse> {
  /**
   * @generated from field: repeated wordvault.Deck decks = 1;
   */
  decks: Deck[];

  constructor(data?: PartialMessage<GetDecksResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "wordvault.GetDecksResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDecksResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDecksResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDecksResponse;

  static equals(a: GetDecksResponse | PlainMessage<GetDecksResponse> | undefined, b: GetDecksResponse | PlainMessage<GetDecksResponse> | undefined): boolean;
}

/**
 * @generated from message wordvault.EditDeckRequest
 */
export declare class EditDeckRequest extends Message<EditDeckRequest> {
  /**
   * @generated from field: int64 id = 1;
   */
  id: bigint;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  constructor(data?: PartialMessage<EditDeckRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "wordvault.EditDeckRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EditDeckRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EditDeckRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EditDeckRequest;

  static equals(a: EditDeckRequest | PlainMessage<EditDeckRequest> | undefined, b: EditDeckRequest | PlainMessage<EditDeckRequest> | undefined): boolean;
}

/**
 * @generated from message wordvault.EditDeckResponse
 */
export declare class EditDeckResponse extends Message<EditDeckResponse> {
  /**
   * @generated from field: wordvault.Deck deck = 1;
   */
  deck?: Deck;

  constructor(data?: PartialMessage<EditDeckResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "wordvault.EditDeckResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EditDeckResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EditDeckResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EditDeckResponse;

  static equals(a: EditDeckResponse | PlainMessage<EditDeckResponse> | undefined, b: EditDeckResponse | PlainMessage<EditDeckResponse> | undefined): boolean;
}

/**
 * @generated from message wordvault.EditFsrsParametersResponse
 */
export declare class EditFsrsParametersResponse extends Message<EditFsrsParametersResponse> {
  constructor(data?: PartialMessage<EditFsrsParametersResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "wordvault.EditFsrsParametersResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EditFsrsParametersResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EditFsrsParametersResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EditFsrsParametersResponse;

  static equals(a: EditFsrsParametersResponse | PlainMessage<EditFsrsParametersResponse> | undefined, b: EditFsrsParametersResponse | PlainMessage<EditFsrsParametersResponse> | undefined): boolean;
}

