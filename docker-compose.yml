# We are still using docker-compose for local development.
# This will make it easier for anyone else to get started, without
# having to download minikube, use kubectl, etc.
# The Docker for <OS> package should be enough.
version: "3"

services:
  pgdb:
    image: postgres
    environment:
      POSTGRES_PASSWORD: pass
    volumes:
      - pg-data-volume:/var/lib/postgresql/data
    expose:
      - 5432
    ports:
      - 5437:5432
    networks:
      aeronet:

  app:
    env_file:
      - ./config/local_config.env
    build: .
    working_dir: /opt/webolith/djAerolith
    volumes:
      - .:/opt/webolith:rw
      - ./db:/db
    ports:
      - 8000:8000
    links:
      - pgdb
    command: python manage.py runserver 0.0.0.0:8000
    networks:
      - aeronet

  redis:
    image: redis:alpine
    ports:
      - 6384:6379
    networks:
      - aeronet

volumes:
  pg-data-volume:
    external: false

networks:
  aeronet:
    driver: bridge

# best way to load data into db
# docker-compose up pgdb
# docker exec -it webolith_pgdb_1 bash
# psql -U postgres
# drop database djaerolith;
# create database djaerolith;
# exit out
# then go to /opt/downloads and do psql -U postgres djaerolith < file.sql



