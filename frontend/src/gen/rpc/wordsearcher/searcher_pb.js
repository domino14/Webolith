// @generated by protoc-gen-es v1.10.0
// @generated from file rpc/wordsearcher/searcher.proto (package wordsearcher, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";

/**
 * An Alphagram encapsulates info about an alphagram, including the words,
 * length, probability, combinations.
 *
 * @generated from message wordsearcher.Alphagram
 */
export const Alphagram = /*@__PURE__*/ proto3.makeMessageType(
  "wordsearcher.Alphagram",
  () => [
    { no: 1, name: "alphagram", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "words", kind: "message", T: Word, repeated: true },
    { no: 3, name: "expandedRepr", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "length", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "probability", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 6, name: "combinations", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 7, name: "difficulty", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ],
);

/**
 * A Word is more than just the string representing the word. It has other
 * info like the definition, hooks, lex symbols, etc.
 *
 * @generated from message wordsearcher.Word
 */
export const Word = /*@__PURE__*/ proto3.makeMessageType(
  "wordsearcher.Word",
  () => [
    { no: 1, name: "word", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "alphagram", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "definition", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "front_hooks", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "back_hooks", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "lexicon_symbols", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "inner_front_hook", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 8, name: "inner_back_hook", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ],
);

/**
 * A SearchRequest encapsulates a number of varied conditions and lets one
 * search for questions.
 *
 * @generated from message wordsearcher.SearchRequest
 */
export const SearchRequest = /*@__PURE__*/ proto3.makeMessageType(
  "wordsearcher.SearchRequest",
  () => [
    { no: 1, name: "searchparams", kind: "message", T: SearchRequest_SearchParam, repeated: true },
    { no: 2, name: "expand", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ],
);

/**
 * @generated from enum wordsearcher.SearchRequest.Condition
 */
export const SearchRequest_Condition = /*@__PURE__*/ proto3.makeEnum(
  "wordsearcher.SearchRequest.Condition",
  [
    {no: 0, name: "LEXICON"},
    {no: 1, name: "LENGTH"},
    {no: 2, name: "PROBABILITY_RANGE"},
    {no: 3, name: "PROBABILITY_LIST"},
    {no: 4, name: "PROBABILITY_LIMIT"},
    {no: 5, name: "NUMBER_OF_ANAGRAMS"},
    {no: 6, name: "NUMBER_OF_VOWELS"},
    {no: 7, name: "HAS_TAGS"},
    {no: 8, name: "POINT_VALUE"},
    {no: 9, name: "MATCHING_ANAGRAM"},
    {no: 10, name: "ALPHAGRAM_LIST"},
    {no: 11, name: "NOT_IN_LEXICON"},
    {no: 12, name: "UPLOADED_WORD_OR_ALPHAGRAM_LIST"},
    {no: 13, name: "WORD_LIST"},
    {no: 14, name: "SINGLE_VALUE_LENGTH"},
    {no: 15, name: "NUM_TWO_BLANKS"},
    {no: 16, name: "MAX_SOLUTIONS"},
    {no: 17, name: "DIFFICULTY_RANGE"},
    {no: 18, name: "PLAYABILITY_RANGE"},
    {no: 19, name: "DELETED_WORD"},
    {no: 20, name: "CONTAINS_HOOKS"},
    {no: 21, name: "DEFINITION_CONTAINS"},
  ],
);

/**
 * @generated from enum wordsearcher.SearchRequest.NotInLexCondition
 */
export const SearchRequest_NotInLexCondition = /*@__PURE__*/ proto3.makeEnum(
  "wordsearcher.SearchRequest.NotInLexCondition",
  [
    {no: 0, name: "OTHER_ENGLISH"},
    {no: 1, name: "PREVIOUS_VERSION"},
  ],
);

/**
 * @generated from enum wordsearcher.SearchRequest.HookType
 */
export const SearchRequest_HookType = /*@__PURE__*/ proto3.makeEnum(
  "wordsearcher.SearchRequest.HookType",
  [
    {no: 0, name: "FRONT_HOOKS"},
    {no: 1, name: "BACK_HOOKS"},
    {no: 2, name: "INNER_HOOKS"},
  ],
);

/**
 * @generated from message wordsearcher.SearchRequest.MinMax
 */
export const SearchRequest_MinMax = /*@__PURE__*/ proto3.makeMessageType(
  "wordsearcher.SearchRequest.MinMax",
  () => [
    { no: 1, name: "min", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "max", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ],
  {localName: "SearchRequest_MinMax"},
);

/**
 * @generated from message wordsearcher.SearchRequest.StringValue
 */
export const SearchRequest_StringValue = /*@__PURE__*/ proto3.makeMessageType(
  "wordsearcher.SearchRequest.StringValue",
  () => [
    { no: 1, name: "value", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
  {localName: "SearchRequest_StringValue"},
);

/**
 * @generated from message wordsearcher.SearchRequest.StringArray
 */
export const SearchRequest_StringArray = /*@__PURE__*/ proto3.makeMessageType(
  "wordsearcher.SearchRequest.StringArray",
  () => [
    { no: 1, name: "values", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ],
  {localName: "SearchRequest_StringArray"},
);

/**
 * @generated from message wordsearcher.SearchRequest.NumberArray
 */
export const SearchRequest_NumberArray = /*@__PURE__*/ proto3.makeMessageType(
  "wordsearcher.SearchRequest.NumberArray",
  () => [
    { no: 1, name: "values", kind: "scalar", T: 5 /* ScalarType.INT32 */, repeated: true },
  ],
  {localName: "SearchRequest_NumberArray"},
);

/**
 * @generated from message wordsearcher.SearchRequest.NumberValue
 */
export const SearchRequest_NumberValue = /*@__PURE__*/ proto3.makeMessageType(
  "wordsearcher.SearchRequest.NumberValue",
  () => [
    { no: 1, name: "value", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ],
  {localName: "SearchRequest_NumberValue"},
);

/**
 * @generated from message wordsearcher.SearchRequest.HooksParam
 */
export const SearchRequest_HooksParam = /*@__PURE__*/ proto3.makeMessageType(
  "wordsearcher.SearchRequest.HooksParam",
  () => [
    { no: 1, name: "hook_type", kind: "enum", T: proto3.getEnumType(SearchRequest_HookType) },
    { no: 2, name: "hooks", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "not_condition", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ],
  {localName: "SearchRequest_HooksParam"},
);

/**
 * @generated from message wordsearcher.SearchRequest.SearchParam
 */
export const SearchRequest_SearchParam = /*@__PURE__*/ proto3.makeMessageType(
  "wordsearcher.SearchRequest.SearchParam",
  () => [
    { no: 1, name: "condition", kind: "enum", T: proto3.getEnumType(SearchRequest_Condition) },
    { no: 2, name: "minmax", kind: "message", T: SearchRequest_MinMax, oneof: "conditionparam" },
    { no: 3, name: "stringvalue", kind: "message", T: SearchRequest_StringValue, oneof: "conditionparam" },
    { no: 4, name: "stringarray", kind: "message", T: SearchRequest_StringArray, oneof: "conditionparam" },
    { no: 5, name: "numberarray", kind: "message", T: SearchRequest_NumberArray, oneof: "conditionparam" },
    { no: 6, name: "numbervalue", kind: "message", T: SearchRequest_NumberValue, oneof: "conditionparam" },
    { no: 7, name: "hooksparam", kind: "message", T: SearchRequest_HooksParam, oneof: "conditionparam" },
  ],
  {localName: "SearchRequest_SearchParam"},
);

/**
 * @generated from message wordsearcher.SearchResponse
 */
export const SearchResponse = /*@__PURE__*/ proto3.makeMessageType(
  "wordsearcher.SearchResponse",
  () => [
    { no: 1, name: "alphagrams", kind: "message", T: Alphagram, repeated: true },
    { no: 2, name: "lexicon", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message wordsearcher.AnagramRequest
 */
export const AnagramRequest = /*@__PURE__*/ proto3.makeMessageType(
  "wordsearcher.AnagramRequest",
  () => [
    { no: 1, name: "lexicon", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "letters", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "mode", kind: "enum", T: proto3.getEnumType(AnagramRequest_Mode) },
    { no: 4, name: "expand", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ],
);

/**
 * @generated from enum wordsearcher.AnagramRequest.Mode
 */
export const AnagramRequest_Mode = /*@__PURE__*/ proto3.makeEnum(
  "wordsearcher.AnagramRequest.Mode",
  [
    {no: 0, name: "EXACT"},
    {no: 1, name: "BUILD"},
    {no: 2, name: "SUPER"},
  ],
);

/**
 * @generated from message wordsearcher.AnagramResponse
 */
export const AnagramResponse = /*@__PURE__*/ proto3.makeMessageType(
  "wordsearcher.AnagramResponse",
  () => [
    { no: 1, name: "words", kind: "message", T: Word, repeated: true },
    { no: 2, name: "num_words", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ],
);

/**
 * @generated from message wordsearcher.BlankChallengeCreateRequest
 */
export const BlankChallengeCreateRequest = /*@__PURE__*/ proto3.makeMessageType(
  "wordsearcher.BlankChallengeCreateRequest",
  () => [
    { no: 1, name: "lexicon", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "num_questions", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "max_solutions", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "num_with_2_blanks", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "word_length", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ],
);

/**
 * @generated from message wordsearcher.BuildChallengeCreateRequest
 */
export const BuildChallengeCreateRequest = /*@__PURE__*/ proto3.makeMessageType(
  "wordsearcher.BuildChallengeCreateRequest",
  () => [
    { no: 1, name: "lexicon", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "min_solutions", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "max_solutions", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "min_length", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "max_length", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 6, name: "require_length_solution", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ],
);

/**
 * @generated from message wordsearcher.WordSearchRequest
 */
export const WordSearchRequest = /*@__PURE__*/ proto3.makeMessageType(
  "wordsearcher.WordSearchRequest",
  () => [
    { no: 1, name: "lexicon", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "glob", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "applies_to", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message wordsearcher.DefineRequest
 */
export const DefineRequest = /*@__PURE__*/ proto3.makeMessageType(
  "wordsearcher.DefineRequest",
  () => [
    { no: 1, name: "lexicon", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "word", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message wordsearcher.WordSearchResponse
 */
export const WordSearchResponse = /*@__PURE__*/ proto3.makeMessageType(
  "wordsearcher.WordSearchResponse",
  () => [
    { no: 1, name: "words", kind: "message", T: Word, repeated: true },
  ],
);

