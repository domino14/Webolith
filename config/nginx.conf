user              nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log;
#error_log  /var/log/nginx/error.log  notice;
#error_log  /var/log/nginx/error.log  info;

pid        /var/run/nginx.pid;


#----------------------------------------------------------------------
# Events Module
#
#   http://wiki.nginx.org/NginxHttpEventsModule
#
#----------------------------------------------------------------------

events {
    worker_connections  1024;
    accept_mutex off; # on if worker_rpocesses > 1
}


#----------------------------------------------------------------------
# HTTP Core Module
#
#   http://wiki.nginx.org/NginxHttpCoreModule
#
#----------------------------------------------------------------------

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;

    keepalive_timeout  65;

    #gzip  on;

    upstream app_server {
        server 127.0.0.1:8000 fail_timeout=0;
    }
    server {
      location / {
        rewrite ^ https://$host$request_uri? permanent;
      }
    }

    server {
      listen 443;
      ssl on;
      server_name www.aerolith.org;
      ssl_certificate /home/ubuntu/aerolith.org.chained.crt;
      ssl_certificate_key /home/ubuntu/aerolith.key;
      ssl_session_timeout 5m;
      ssl_session_cache shared:SSL:1m;
      ssl_ciphers RC4:AES128-SHA:AES:!MD5:!ADH:!DH:!ECDH:!PSK:!SSLv2;
      keepalive_timeout 70;

      location /static/ {
        alias /home/ubuntu/webolith_static/;
      }
      location /static/build/ {
        alias /home/ubuntu/webolith_static/build/;
        gzip_static on;
        expires max;
      }
      location /lists {
        alias /home/ubuntu/public_html/lists;
        autoindex on;
      }

      location / {
        try_files $uri @proxy_to_app;
      }
      location @proxy_to_app {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_pass http://app_server;
      }
    }

    # Load config files from the /etc/nginx/conf.d directory
    include /etc/nginx/conf.d/*.conf;
    types_hash_bucket_size 64;  # What the hell is this?
}